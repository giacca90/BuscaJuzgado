services:
    postgres:
        build:
            context: ./back_spring
            dockerfile: Dockerfile.postgre
        container_name: postgres_db
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - buscaJuzgados_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - backend

    spring-app:
        build:
            context: ./back_spring
            dockerfile: Dockerfile
        container_name: spring_app
        ports:
            - "${SPRING_PORT}:8080"
        environment:
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
            SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
            SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - /etc/letsencrypt/live/giacca90.ddns.net/keystore.p12:/certs/keystore.p12:ro
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - backend

volumes:
    buscaJuzgados_data:

networks:
    backend:
        driver: bridge
